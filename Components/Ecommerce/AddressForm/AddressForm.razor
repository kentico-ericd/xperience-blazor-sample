@using CMS.Ecommerce
@using CMS.Globalization

@if(isValid)
{
    <button class="btn btn-danger" @onclick="() => { isValid=false; StateHasChanged(); }">Edit</button>
}
else
{
    <EditForm OnValidSubmit="ValidSubmit" Model="Model">
        <div class="form-group">
            <label for="Name">Name</label>
            <InputText required maxlength="200" placeholder="Home" id="Name" @bind-Value="Model.AddressPersonalName" class="form-control col-4" />
        </div>
        <div class="form-group">
            <label for="Line1">Line 1</label>
            <InputText required maxlength="100" id="Line1" @bind-Value="Model.AddressLine1" class="form-control" />
        </div>
        <div class="form-group">
            <label for="Line2">Line 2</label>
            <InputText id="Line2" @bind-Value="Model.AddressLine2" class="form-control" />
        </div>
        <div class="form-group">
            <label for="City">City</label>
            <InputText required maxlength="100" id="City" @bind-Value="Model.AddressCity" class="form-control col-6" />
        </div>
        <div class="form-group">
            <label for="ZIP">ZIP</label>
            <InputText required maxlength="20" id="ZIP" @bind-Value="Model.AddressZip" class="form-control col-4" />
        </div>
        <div class="form-group">
            <label for="Country">Country</label>
            <InputSelect required @onselectionchange="CountryChanged" id="Country" @bind-Value="Model.AddressCountryID" class="form-control col-6">
                <option value=""></option>
                @foreach (var country in Countries)
                {
                    <option value="@country.CountryID">@country.CountryDisplayName</option>
                }
            </InputSelect>
        </div>
        <div hidden="@(GetCountryStates(Model.AddressCountryID).Count() == 0)" class="form-group">
            <label for="State">State</label>
            <InputSelect id="State" @bind-Value="Model.AddressStateID" class="form-control col-6">
                @foreach (var state in GetCountryStates(Model.AddressCountryID))
                {
                    <option value="@state.StateID">@state.StateDisplayName</option>
                }
            </InputSelect>
        </div>
        <input type="submit" value="Save" class="btn btn-success" />
    </EditForm>
}

@code {
    private IEnumerable<StateInfo> mStates;
    private IEnumerable<CountryInfo> mCountries;
    public bool isValid = false;
    [Parameter]
    public AddressInfo Model { get; set; }
    [Parameter]
    public EventHandler OnSubmit { get; set; }
    private IEnumerable<CountryInfo> Countries
    {
        get
        {
            if(mCountries == null)
            {
                mCountries = CountryInfo.Provider.Get().Columns("CountryDisplayName", "CountryID").TypedResult;
            }
            return mCountries;
        }
    }

    private IEnumerable<StateInfo> States
    {
        get
        {
            if(mStates == null)
            {
                mStates = StateInfo.Provider.Get().Columns("StateDisplayName", "StateID", "CountryID").TypedResult;
            }
            return mStates;
        }
    }

    private void ValidSubmit() {
        isValid = true;
        OnSubmit?.Invoke(null, null);
    }

    private void CountryChanged(EventArgs e)
    {
        StateHasChanged();
    }

    private IEnumerable<StateInfo> GetCountryStates(int countryID)
    {
        if(countryID == 0)
        {
            return new List<StateInfo>();
        }
        return States.Where(s => s.CountryID == countryID);
    }
}