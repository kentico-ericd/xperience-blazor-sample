@using CMS.DocumentEngine.Types.Blazor
@using Kentico.Content.Web.Mvc
@inject IPageAttachmentUrlRetriever pageAttachmentUrlRetriever
@inject IPageUrlRetriever pageUrlRetriever

<header>
  <div id="carouselExampleIndicators" class="carousel slide" data-ride="carousel">
    <ol class="carousel-indicators">
      @for (var i = 0; i < Items.Count(); i++)
      {
        var className = i == 0 ? "active" : "";
        <li data-target="#carouselExampleIndicators" data-slide-to="@i" class="@className"></li>
      }
    </ol>
    <div class="carousel-inner" role="listbox">
      @for (var i = 0; i < Items.Count(); i++)
      {
        var className = i == 0 ? "active" : "";
        <div class="carousel-item @className" onclick="window.location='@GetTargetUrl(Items[i])'"
        style="background-image: url('@GetAttachmentUrl(Items[i])')">
          <div class="carousel-caption d-none d-md-block">
            <h3 class="display-4">@Items[i].Title</h3>
            <p class="lead">@Items[i].Text</p>
          </div>
        </div>
      }
    </div>
    <a class="carousel-control-prev" href="#carouselExampleIndicators" role="button" data-slide="prev">
      <span class="carousel-control-prev-icon" aria-hidden="true"></span>
      <span class="sr-only">Previous</span>
    </a>
    <a class="carousel-control-next" href="#carouselExampleIndicators" role="button" data-slide="next">
      <span class="carousel-control-next-icon" aria-hidden="true"></span>
      <span class="sr-only">Next</span>
    </a>
  </div>
</header>

@code {
  public CarouselItem[] Items
  {
    get
    {
      return CarouselItemProvider.GetCarouselItems()
      .OnCurrentSite()
      .ToArray();
    }
  }

  public string GetAttachmentUrl(CarouselItem item)
  {
    var attachment = item.Fields.BackgroundImage.FirstOrDefault();
    return attachment == null ? "" :
      pageAttachmentUrlRetriever.Retrieve(attachment).AbsoluteUrl;
  }

  public string GetTargetUrl(CarouselItem item) {
    var page = item.Fields.PageTarget.FirstOrDefault();
    return page == null ? "#" :
      pageUrlRetriever.Retrieve(page).AbsoluteUrl;
  }
}