@using BlazorApp.Services
@using CMS.Helpers
@using Kentico.Content.Web.Mvc
@using Models
@inject IPageUrlRetriever pageUrlRetriever
@inject IProductService productService
@inject ICartService cartService
@inject NavigationManager navigationManager

<div class="search-card col-12 m-1 mb-5 pl-1 pr-1">
    <div class="container pl-0 mb-4">
        <div class="row">
            <div class="col-2 search-image">
                <img src="@ProductViewModel.Image" alt="@ProductViewModel.Product.DocumentSKUName">
            </div>
            <div class="col">
                <h3 class="mb-0">@ProductViewModel.Product.DocumentSKUName</h3>
                <span class="search-description">
                    @Description
                </span>
            </div>
            <div class="search-price-col col-2">
                <a href="@Routes.GetCategoryURL(ProductViewModel.Product.SKUProduct.Department)">
                    @ProductViewModel.Product.SKUProduct.Department.DepartmentDisplayName
                </a>
                <div class="search-card-price font-weight-bold">
                    @cartService.FormatPrice(ProductViewModel.Prices.Price, ProductViewModel.Prices.Currency)
                </div>
                <div class="item-list-price ml-auto">
                    @if (ProductViewModel.Prices.Price < ProductViewModel.Prices.ListPrice)
                    {
                        <strike class="text-danger">@cartService.FormatPrice(ProductViewModel.Prices.ListPrice,
                        ProductViewModel.Prices.Currency)</strike>
                    }
                    else
                    {
                        <span>&nbsp;</span>
                    }
                </div>
                <div class="mt-4">
                    <button @onclick="args => navigationManager.NavigateTo(ProductViewModel.URL)" class="btn btn-danger">
                        <i class="bi bi-cart-fill"></i> Buy
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public ProductViewModel ProductViewModel { get; set; }
    public MarkupString Description
    {
        get
        {
            var str = HTMLHelper.LimitLength(ProductViewModel.Product.DocumentSKUShortDescription, 550, "..", false);
            return (MarkupString)str;
        }
    }
}