@using BlazorApp.Services
@using CMS.Helpers
@using Kentico.Content.Web.Mvc
@using Models
@inject IPageUrlRetriever pageUrlRetriever
@inject ICartService cartService

<div class="col-2 m-1 mb-5 pl-1 pr-1">
    <div class="bbb_deals">
        <div class="ribbon ribbon-top-right">
            <span><i class="cross bi @ProductViewModel.IconClass"></i></span>
        </div>
        <div class="bbb_deals_title">@ProductViewModel.Product.CardHeader</div>
        <div class="bbb_deals_slider_container">
            <div class=" bbb_deals_item">
                <div class="bbb_deals_image">
                    <img src="@ProductViewModel.Image" alt="@ProductViewModel.Product.DocumentSKUName">
                </div>
                <div class="bbb_deals_content">
                    <div class="bbb_deals_info_line d-flex flex-row justify-content-start">
                        <div class="bbb_deals_item_category">
                            <a href="@Routes.GetCategoryURL(ProductViewModel.Product.SKUProduct.Department)">
                                @ProductViewModel.Product.SKUProduct.Department.DepartmentDisplayName
                            </a>
                        </div>
                    </div>
                    <div class="bbb_deals_info_line d-flex flex-row justify-content-start">
                        <div class="bbb_deals_item_name">
                            <a href="@Routes.GetProductURL(ProductViewModel.Product)">
                                @HTMLHelper.LimitLength(ProductViewModel.Product.DocumentSKUName, 35, "..", false)
                            </a>
                        </div>
                    </div>
                    <div class="bbb_deals_item_price ml-auto">
                        @cartService.FormatPrice(ProductViewModel.Prices.Price, ProductViewModel.Prices.Currency)
                    </div>
                    <div class="item-list-price ml-auto">
                        @if (ProductViewModel.Prices.Price < ProductViewModel.Prices.ListPrice)
                        {
                            <strike class="text-danger">@cartService.FormatPrice(ProductViewModel.Prices.ListPrice,
                            ProductViewModel.Prices.Currency)</strike>
                        }
                        else
                        {
                            <span>&nbsp;</span>
                        }
                    </div>
                    <div class="available">
                        <div class="available_line d-flex flex-row justify-content-start">
                            <div class="available_title">
                                @if (ProductViewModel.Available)
                                {
                                    <span>Available: @ProductViewModel.Product.SKU.SKUAvailableItems</span>
                                }
                                else
                                {
                                    <span class="text-danger">Out of stock</span>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public ProductViewModel ProductViewModel { get; set; }
}